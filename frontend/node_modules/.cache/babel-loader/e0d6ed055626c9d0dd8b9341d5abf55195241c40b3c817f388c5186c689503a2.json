{"ast":null,"code":"var _jsxFileName = \"/Users/steverestrepo/Documents/GitHub/React.js/sec20-27/sec20-project2-/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLoaderData, json } from \"react-router-dom\";\n\n// import styles from './EventDetail.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useLoaderData","json","jsxDEV","_jsxDEV","EventDetailPage","_s","data","EventItem","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/steverestrepo/Documents/GitHub/React.js/sec20-27/sec20-project2-/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from \"react\";\n\nimport { useLoaderData, json } from \"react-router-dom\";\n\n// import styles from './EventDetail.module.css';\n\nfunction EventDetailPage() {\n  const data = useLoaderData();\n\n  return <EventItem event={data.event} />;\n}\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGN,aAAa,EAAE;EAE5B,oBAAOG,OAAA,CAACI,SAAS;IAACC,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACzC;AAACP,EAAA,CAJQD,eAAe;EAAA,QACTJ,aAAa;AAAA;AAAAa,EAAA,GADnBT,eAAe;AAMxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CACR;MAAEsB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}